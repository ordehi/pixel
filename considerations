Needs saving
Needs undo, redo

Undo needs some sort of memory storage that we can revert to
It needs to store the state of the grid up to some extent

We could store it against localStorage?

what would be the data structure?

What do I need to store actually?

The cell positions and color data, the cells are numbered so I can store the cell number with their color data

The memory store behind and beyond the current time, so there are two memory stores. 

The behind store stores actions done before so that they can be undone, the beyond store does so with actions that were undone, so they can be redone/reverted

How does that data structure look like?

An object?

const undoStore = {


}


Actually an array of objects, since an array is indexed from oldest to newest we can simply use push and pop to undo/redo


const undoStore = [
  {
    cell: "cell-1".
    color: "#FFF",
  },
]

So we'll access memory like this

let undo = undoStore.pop()

app.querySelector(undo.cell).style.color = undo.color

redo can work much the same, but triggers when undo is used. 

const redoStore = []

redoStore.push(undo)


